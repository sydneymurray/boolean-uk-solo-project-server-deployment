generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW")
}

model accounts {
  accountID                                        Int            @id @default(autoincrement())
  type                                             type           @default(CURRENT)
  overdraftLimit                                   Float
  linkedAccount                                    Int?
  active                                           Boolean
  customerID                                       Int
  customers                                        customers      @relation(fields: [customerID], references: [customerID], onDelete: SetNull)
  transactions_accountsTotransactions_payeeAccount transactions[] @relation("accountsTotransactions_payeeAccount")
  transactions_accountsTotransactions_payerAccount transactions[] @relation("accountsTotransactions_payerAccount")
}

model customers {
  customerID Int        @id @default(autoincrement())
  userName   String     @unique @db.VarChar(255)
  password   String     @db.VarChar(255)
  firstName  String     @db.VarChar(255)
  lastName   String     @db.VarChar(255)
  email      String     @unique @db.VarChar(255)
  active     Boolean?
  accounts   accounts[]
}

model transactions {
  transactionID                                Int       @id @default(autoincrement())
  amount                                       Float
  date                                         DateTime  @default(now())
  payeeAccount                                 Int?
  payerAccount                                 Int?
  comments                                     String    @db.VarChar(255)
  accounts_accountsTotransactions_payeeAccount accounts? @relation("accountsTotransactions_payeeAccount", fields: [payeeAccount], references: [accountID])
  accounts_accountsTotransactions_payerAccount accounts? @relation("accountsTotransactions_payerAccount", fields: [payerAccount], references: [accountID])
}

enum type {
  BUSINESS
  CURRENT
  LOAN
  SAVINGS
}
